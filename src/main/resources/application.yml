server:
  port: 8091

spring:
  data:
    mongodb:
      host: localhost
      port: 27017
      database: customer
  application:
    name: CustomerService
  zipkin:
    base-url: http://localhost:9411/

  sleuth:
    sampler:
      probability: 1 #100% (default = 10%)

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/, http://localhost:8762/eureka/
  server:
    enableSelfPreservation: false

#eure
#
#  spring.kafka.bootstrap-servers=localhost:9092
##spring.kafka.consumer.group-id= gid
##spring.kafka.consumer.auto-offset-reset= earliest
##spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
##spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.producer.key-serializer= org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer= org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=project.swa.CustomerService.service
#
#
app:
  topic:
    customertopic: customer
#
#logging.level.root= ERROR
#org.springframework= ERROR
#
#
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/, http://localhost:8762/eureka/
#spring.application.name=ProductService